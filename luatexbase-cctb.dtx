% \iffalse meta-comment
%
% Written in 2009, 2010 by Manuel Pégourié-Gonnard and Élie Roux.
%     <mpg@elzevir.fr>
%     <elie.roux@telecom-bretagne.eu>
%
% This work is under the CC0 license.
%
% This work consists of the main source file luatexbase-cctb.dtx
% and the derived files
%    luatexbase-cctb.sty cctb.lua
%    test-cctb-plain.tex test-cctb-latex.tex
%
% Unpacking:
%    tex luatexbase-cctb.dtx
% Documentation:
%    pdflatex luatexbase-cctb.dtx
%
%<*ignore>
\begingroup
  \def\x{LaTeX2e}%
\expandafter\endgroup
\ifcase 0\ifx\install y1\fi\expandafter
         \ifx\csname processbatchFile\endcsname\relax\else1\fi
         \ifx\fmtname\x\else 1\fi\relax
\else\csname fi\endcsname
%</ignore>
%<*install>
\input docstrip.tex

\keepsilent
\askforoverwritefalse

\let\MetaPrefix\relax

\preamble

Written in 2009, 2010 by Manuel Pegourie-Gonnard and Elie Roux.

This work is under the CC0 license.
See source file '\inFileName' for details.

\endpreamble

\let\MetaPrefix\DoubleperCent

\generate{%
  \usedir{tex/luatex/luatexbase}%
  \file{luatexbase-cctb.sty}{\from{luatexbase-cctb.dtx}{texpackage}}%
}

\generate{%
  \usedir{doc/luatex/luatexbase}%
  \file{test-cctb-plain.tex}{\from{luatexbase-cctb.dtx}{testplain}}%
  \file{test-cctb-latex.tex}{\from{luatexbase-cctb.dtx}{testlatex}}%
}

\def\MetaPrefix{-- }

\def\luapostamble{%
  \MetaPrefix^^J%
  \MetaPrefix\space End of File `\outFileName'.%
}

\def\currentpostamble{\luapostamble}%

\generate{%
  \usedir{tex/luatex/luatexbase}%
  \file{cctb.lua}{\from{luatexbase-cctb.dtx}{luamodule}}%
}

\obeyspaces
\Msg{************************************************************************}
\Msg{*}
\Msg{* To finish the installation you have to move the following}
\Msg{* files into a directory searched by TeX:}
\Msg{*}
\Msg{*     luatexbase-cctb.sty cctb.lua}
\Msg{*}
\Msg{* Happy TeXing!}
\Msg{*}
\Msg{************************************************************************}

\endbatchfile
%</install>
%<*ignore>
\fi
%</ignore>
%<*driver>
\documentclass{ltxdoc}
\input{lltxb-dtxstyle}
\begin{document}
  \DocInput{luatexbase-cctb.dtx}%
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \pkdate{luatexbase-cctb}{v0.3 2010-05-27}
%
% \maketitle
%
% \begin{abstract}
% In addition to the registers existing in \tex and \etex, \luatex introduces
% a new concept: catcode tables. This package takes care of catcode table
% allocation just like Plain TeX and LaTeX do for other registers.
% \end{abstract}
%
% \tableofcontents
%
% \section{Documentation}
%
% The main macro defined here is |\newluatexcatcodetable|. It behaves the same
% as |\newbox|. Additonally, the newly allocated catcode table is initialised
% to the catcodes of Ini\tex.  In order to help you define the catcode tables
% (once they are allocated), two helper macros are available.
%
% \begin{quote}
% \cs{setcatcoderange}\marg{from}\marg{to}\marg{value}
% \end{quote}
% Set all characters code in the range \meta{from}--\meta{to} to the given
% catcode \meta{value}.
%
% \begin{quote}
% \cs{setluatexcatcodetable}\marg{table}\marg{catcode statements}
% \end{quote}
% Set a previously allocated \meta{table} to the catcodes given by executing
% \meta{catcode statements}. Note that \meta{table} must not be the current
% active catcode table. You may, however, load another catcode table in your
% \meta{catcode statements}.
%
% For your convenience, a few catcode tables are prefined:
% \begin{itemize}
% \item |\CatcodeTableIniTeX|: Ini\tex catcodes.
% \item |\CatcodeTableString|: the catcode regime used by |\string| and
% |\meaning|: everything has catcode 12, except space (U+0020) that has
% catcode 10.
% \item |\CatcodeTableOther|: everything (included space) has catcode 12.
% \item |\CatcodeTableLaTeX|: basic \LaTeXe\ catcodes.
% \item |\CatcodeTableLaTeXAtLetter|: same as above, but |@| is a letter.
% \item |\CatcodeTableExpl|: catcodes used by \latex{}3 with |\ExplSyntaxOn|.
% Be aware that this does not provide the exact same environment as
% |\ExplSyntaxOn|: most noticibly, some booleans are not set, and
% |\endlinechar| is not adjusted (it should be 32).
% \end{itemize}
%
% Various Lua function accept a catcode table number as argument. In order to
% use them, the package writer needs to know the number of an allocated
% catcode table. Since |\chardef| is used for the definition of the control
% sequence, this is rather easy to do. However, for extra ease of use, the
% numbers are also directly accessible from Lua as the value of the table
% |luatexbase.catcodetables|, whose keys is the name of the control sequence
% (without any leading backslash). Moreover, nickames are available for the
% predefined catcode tables:
% \begin{itemize}
% \item |CatcodeTableIniTeX| = |ini|,
% \item |CatcodeTableString| = |string|,
% \item |CatcodeTableOther| = |other|,
% \item |CatcodeTableLaTeX| = |latex|,
% \item |CatcodeTableLaTeXAtLetter| = |latex-atletter| = |latex-package|,
% \item |CatcodeTableExpl| = |expl| = |expl3|,
% \end{itemize}
%
%    \section{Implementation}
%
%    \subsection{\tex package}
%
%    \begin{macrocode}
%<*texpackage>
%    \end{macrocode}
%
%    \subsubsection{Preliminaries}
%
%    Reload protection, especially for \plaintex.
%
%    \begin{macrocode}
                \csname lltxb@cctb@loaded\endcsname
\expandafter\let\csname lltxb@cctb@loaded\endcsname\endinput
%    \end{macrocode}
%
%    Catcode defenses.
%
%    \begin{macrocode}
\begingroup
  \catcode123 1 % {
  \catcode125 2 % }
  \catcode 35 6 % #
  \toks0{}%
  \def\x{}%
  \def\y#1 #2 {%
    \toks0\expandafter{\the\toks0 \catcode#1 \the\catcode#1}%
    \edef\x{\x \catcode#1 #2}}%
  \y 123 1  % {
  \y 125 2  % }
  \y  35 6  % #
  \y  10 12 % ^^J
  \y  34 12 % "
  \y  36 3  % $ $
  \y  39 12 % '
  \y  40 12 % (
  \y  41 12 % )
  \y  42 12 % *
  \y  43 12 % +
  \y  44 12 % ,
  \y  45 12 % -
  \y  46 12 % .
  \y  47 12 % /
  \y  60 12 % <
  \y  61 12 % =
  \y  64 11 % @ (letter)
  \y  62 12 % >
  \y  95 12 % _ (other)
  \y  96 12 % `
  \edef\y#1{\endgroup\edef#1{\the\toks0\relax}\x}%
\expandafter\y\csname lltxb@cctb@AtEnd\endcsname
%    \end{macrocode}
%
%    Package declaration.
%
%    \begin{macrocode}
\begingroup
  \expandafter\ifx\csname ProvidesPackage\endcsname\relax
    \def\x#1[#2]{\immediate\write16{Package: #1 #2}}
  \else
    \let\x\ProvidesPackage
  \fi
\expandafter\endgroup
\x{luatexbase-cctb}[2010/10/10 v0.3 Catcodetable allocation for LuaTeX]
%    \end{macrocode}
%
%    Make sure \luatex is used.
%
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname RequirePackage\endcsname\relax
  \input ifluatex.sty
\else
  \RequirePackage{ifluatex}
\fi
\ifluatex\else
  \begingroup
    \expandafter\ifx\csname PackageError\endcsname\relax
      \def\x#1#2#3{\begingroup \newlinechar10
        \errhelp{#3}\errmessage{Package #1 error: #2}\endgroup}
    \else
      \let\x\PackageError
    \fi
  \expandafter\endgroup
  \x{luatexbase-attr}{LuaTeX is required for this package. Aborting.}{%
    This package can only be used with the LuaTeX engine^^J%
    (command `lualatex' or `luatex').^^J%
    Package loading has been stopped to prevent additional errors.}
  \lltxb@cctb@AtEnd
  \expandafter\endinput
\fi
%    \end{macrocode}
%
%    \subsubsection{Load supporting Lua module}
%
%    First load \pk{luatexbase-loader} (hence \pk{luatexbase-compat}), then
%    the supporting Lua module.
%
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname RequirePackage\endcsname\relax
  \input luatexbase-loader.sty
\else
  \RequirePackage{luatexbase-loader}
\fi
\luatexbase@directlua{require('luatexbase.cctb')}
%    \end{macrocode}
%
%    \subsubsection{Primitives needed}
%
%    \pk{luatexbase-compat} is already loaded; just make sure the primitives
%    we need are available.
%
%    \begin{macrocode}
\luatexbase@ensure@primitive{luaescapestring}
\luatexbase@ensure@primitive{catcodetable}
\luatexbase@ensure@primitive{initcatcodetable}
\luatexbase@ensure@primitive{savecatcodetable}
%    \end{macrocode}
%
%    \subsubsection{User macros}
%
%    The allocation macro. Allocate tables starting with 1, since table 0 is
%    the default table. Allocate only odd numbers to allow using even numbers
%    as a stack.
%
%    \begin{macrocode}
\newcount\lltxb@catcodetable@alloc
\lltxb@catcodetable@alloc\m@ne
\def\newluatexcatcodetable#1{%
  \ifnum\lltxb@catcodetable@alloc<65535\relax
    \global\advance\lltxb@catcodetable@alloc\tw@
    \allocationnumber\lltxb@catcodetable@alloc
    \global\chardef#1\allocationnumber
    \luatexinitcatcodetable\allocationnumber
    \begingroup\escapechar\m@ne
    \luatexbase@directlua{luatexbase.catcodetabledef_from_tex(
      '\luatexluaescapestring{\string#1}', '\number\allocationnumber')}%
    \endgroup
    \wlog{\string#1=\string\luatexcatcodetable\the\allocationnumber}%
  \else
    \errmessage{No room for a new \string\luatexcatcodetable}%
  \fi}
%    \end{macrocode}
%
%    A small patch to get two new counters in Plain too.
%
%    \begin{macrocode}
\expandafter\ifx\csname @tempcnta\endcsname\relax
  \csname newcount\endcsname\@tempcnta
\fi
\expandafter\ifx\csname @tempcntb\endcsname\relax
  \csname newcount\endcsname\@tempcntb
\fi
%    \end{macrocode}
%
%    Set the catcodes for a range of characters.
%
%    \begin{macrocode}
\def\setcatcoderange#1#2#3{%
  \edef\luaSCR@temp{%
    \noexpand\@tempcnta=\the\@tempcnta
    \noexpand\@tempcntb=\the\@tempcntb
    \noexpand\count@=\the\count@
    \relax}%
  \@tempcnta=#1\relax
  \@tempcntb=#2\relax
  \count@=#3\relax
  \loop\unless\ifnum\@tempcnta>\@tempcntb
    \catcode\@tempcnta=\count@
    \advance\@tempcnta\@ne
  \repeat
  \luaSCR@temp}
%    \end{macrocode}
%
%    Set a catcode table.
%
%    \begin{macrocode}
\def\setluatexcatcodetable#1#2{%
  \begingroup
  #2%
  \luatexsavecatcodetable#1%
  \endgroup}
%    \end{macrocode}
%
%    \subsubsection{Predefined tables}
%
%    The |IniTeX| catcode table needs no extra initialisation.
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableIniTeX
%    \end{macrocode}
%
%    The |String| and |Other| catcode tables.
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableString
\setluatexcatcodetable\CatcodeTableString{%
  \luatexcatcodetable\CatcodeTableIniTeX
  \catcode0   12 % nul
  \catcode13  12 % carriage return
  \catcode37  12 % percent
  \setcatcoderange{65}{90}{12}% A-Z
  \setcatcoderange{97}{122}{12}% a-z
  \catcode92  12 % backslash
  \catcode127 12 }
%    \end{macrocode}
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableOther
\setluatexcatcodetable\CatcodeTableOther{%
  \luatexcatcodetable\CatcodeTableString
  \catcode32 12 }
%    \end{macrocode}
%
%    Tables for \LaTeXe.
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableLaTeX
\setluatexcatcodetable\CatcodeTableLaTeX{%
  \luatexcatcodetable\CatcodeTableIniTeX
  \setcatcoderange{0}{31}{15}%
  \catcode9   10 % tab
  \catcode12  13 % form feed
  \catcode13  5  % carriage return
  \catcode35  6  % hash
  \catcode36  3  % dollar
  \catcode38  4  % ampersand
  \catcode94  7  % circumflex
  \catcode95  8  % underscore
  \catcode123 1  % brace left
  \catcode125 2  % brace right
  \catcode126 13 % tilde
  \catcode127 15 }
%    \end{macrocode}
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableLaTeXAtLetter
\setluatexcatcodetable\CatcodeTableLaTeXAtLetter{%
  \luatexcatcodetable\CatcodeTableLaTeX
  \catcode64=11 }
%    \end{macrocode}
%
%    A table for \pk{expl3}.
%
%    \begin{macrocode}
\newluatexcatcodetable\CatcodeTableExpl
\setluatexcatcodetable\CatcodeTableExpl{%
  \luatexcatcodetable\CatcodeTableLaTeX
  \catcode126 10 % tilde is a space char
  \catcode32  9  % space is ignored
  \catcode9   9  % tab also ignored
  \catcode95  11 % underscore letter
  \catcode58  11 % colon letter
  }
%    \end{macrocode}
%
%    Finally do the shortcuts.
%
%    \begin{macrocode}
\luatexbase@directlua{luatexbase.catcodetable_do_shortcuts()}
%    \end{macrocode}
%
%    That's all, folks!
%
%    \begin{macrocode}
\lltxb@cctb@AtEnd
%</texpackage>
%    \end{macrocode}
%
%    \subsection{Lua module}
%
%    \begin{macrocode}
%<*luamodule>
module('luatexbase', package.seeall)
%    \end{macrocode}
%
%    The number associated to a CS name is remembered in the |catcodetables|
%    table.
%
%    \begin{macrocode}
catcodetables = {}
function catcodetabledef_from_tex(name, number)
    catcodetables[name] = tonumber(number)
end
%    \end{macrocode}
%
%    The next function creates some shortcuts for better readability in lua
%    code. This makes |luatexbase.catcodetables.latex| equivalent to
%    |luatexbase.catcodetables.CatcodeTableLaTeX|.
%
%    \begin{macrocode}
function catcodetable_do_shortcuts()
    local cat = catcodetables
    cat['latex']                = cat.CatcodeTableLaTeX
    cat['latex-package']        = cat.CatcodeTableLaTeXAtLetter
    cat['latex-atletter']       = cat.CatcodeTableLaTeXAtLetter
    cat['ini']                  = cat.CatcodeTableIniTeX
    cat['expl3']                = cat.CatcodeTableExpl
    cat['expl']                 = cat.CatcodeTableExpl
    cat['string']               = cat.CatcodeTableString
    cat['other']                = cat.CatcodeTableOther
end
%    \end{macrocode}
%
%    \begin{macrocode}
%</luamodule>
%    \end{macrocode}
%
%    \section{Test files}
%
%    The tests done are very basic: we just make sure that the package loads
%    correctly and the macros don't generate any error, under both LaTeX en
%    Plain TeX.
%
%    \begin{macrocode}
%<testplain,testlatex>\catcode00 15
%<testplain>\input luatexbase-cctb.sty
%<testlatex>\RequirePackage{luatexbase-cctb}
%<*testplain,testlatex>
\begingroup \catcode64 11 \global\let\lua\luatexbase@directlua \endgroup
%    \end{macrocode}
%
%    Also check that the catcodetable's number is remembered well,
%    independently of the current value of |\escapechar|.

%    \begin{macrocode}
\newluatexcatcodetable\testcctb
\lua{assert(luatexbase.catcodetables.testcctb)}
\begingroup
\escapechar64
\newluatexcatcodetable\anothercctb
\endgroup
\lua{assert(luatexbase.catcodetables.anothercctb)}
%    \end{macrocode}
%
%    Now, play a little bit with predefined tables. Be careful to change
%    catcodes only inside a group to avoid chaos.
%
%    \begin{macrocode}
\def\test#1#2#3{%
  \begingroup
  \ifcsname CatcodeTable#1\endcsname \else \INTERR \fi
  \luatexcatcodetable\csname CatcodeTable#1\endcsname
  \ifnum\catcode#2=#3 \else \ERROR \fi
  \endgroup}
\test {IniTeX}        {00} {09}
\test {IniTeX}        {92} {00}
\test {IniTeX}        {64} {12}
\test {IniTeX}        {65} {11}
\test {String}        {92} {12}
\test {String}        {65} {12}
\test {String}        {32} {10}
\test {Other}         {92} {12}
\test {Other}         {65} {12}
\test {Other}         {32} {12}
\test {LaTeXAtLetter} {64} {11}
\test {LaTeX}         {64} {12}
\test {Expl}          {32} {09}
%<testlatex>\documentclass{minimal}
\lua{%
  tex.sprint('\string\\setbox0=\string\\hbox{')
  tex.sprint(luatexbase.catcodetables.string, "\string\\undef # _^&")
  tex.sprint('}')
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</testplain,testlatex>
%<testplain>\bye
%<testlatex>\stop
%    \end{macrocode}
%
% \Finale
\endinput

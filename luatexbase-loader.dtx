% \iffalse meta-comment
%
% Written in 2009, 2010 by Manuel Pégourié-Gonnard and Élie Roux.
%     <mpg@elzevir.fr>
%     <elie.roux@telecom-bretagne.eu>
%
% This work is under the CC0 license.
%
% This work consists of the main source file luatexbase-loader.dtx
% and the derived files
%    luatexbase-loader.sty luatexbase.loader.lua
%    test-loader-plain.tex test-loader-latex.tex
%
% Unpacking:
%    tex luatexbase-loader.dtx
% Documentation:
%    pdflatex luatexbase-loader.dtx
%
%<*ignore>
\begingroup
  \def\x{LaTeX2e}%
\expandafter\endgroup
\ifcase 0\ifx\install y1\fi\expandafter
         \ifx\csname processbatchFile\endcsname\relax\else1\fi
         \ifx\fmtname\x\else 1\fi\relax
\else\csname fi\endcsname
%</ignore>
%<*install>
\input docstrip.tex

\keepsilent
\askforoverwritefalse

\let\MetaPrefix\relax

\preamble

Written in 2009, 2010 by Manuel Pegourie-Gonnard and Elie Roux.

This work is under the CC0 license.
See source file '\inFileName' for details.

\endpreamble

\let\MetaPrefix\DoubleperCent

\generate{%
  \usedir{tex/luatex/luatexbase}%
  \file{luatexbase-loader.sty}{\from{luatexbase-loader.dtx}{texpackage}}%
}

\generate{%
  \usedir{doc/luatex/luatexbase}%
  \file{test-loader-plain.tex}{\from{luatexbase-loader.dtx}{testplain}}%
  \file{test-loader-latex.tex}{\from{luatexbase-loader.dtx}{testlatex}}%
}

\def\MetaPrefix{-- }

\def\luapostamble{%
  \MetaPrefix^^J%
  \MetaPrefix\space End of File `\outFileName'.%
}

\def\currentpostamble{\luapostamble}%

\generate{%
  \usedir{tex/luatex/luatexbase}%
  \file{luatexbase.loader.lua}{\from{luatexbase-loader.dtx}{luamodule}}%
}

\obeyspaces
\Msg{************************************************************************}
\Msg{*}
\Msg{* To finish the installation you have to move the following}
\Msg{* files into a directory searched by TeX:}
\Msg{*}
\Msg{*     luatexbase-loader.sty luatex.loader.lua}
\Msg{*}
\Msg{* Happy TeXing!}
\Msg{*}
\Msg{************************************************************************}

\endbatchfile
%</install>
%<*ignore>
\fi
%</ignore>
%<*driver>
\documentclass{ltxdoc}
\input{lltxb-dtxstyle}
\begin{document}
  \DocInput{luatexbase-loader.dtx}%
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \title{The \pk{luatexbase-loader} package}
% \date{v0.1 2010-03-27}
% \author{%
%  Manuel P\'egouri\'e-Gonnard \\ \texttt{mpg@elzevir.fr} \and
%   \'Elie Roux \\ \texttt{elie.roux@telecom-bretagne.eu}}
%
% \maketitle
%
% \begin{abstract}
% Lua modules are loaded using the |require()| function which, similarly to
% \tex's |\input|, takes care of locating the file and load it, but also makes
% a few supplementary checks, for example to avoid loading the same module
% twice. This package adapts the way the files are searched in order to
% accomodate the TDS as well as usual Lua naming conventions.
%
% For higher-level functions related to Lua modules, see
% \href{file:luatexbase-modutils.pdf}{\pk{luatexbase-modutils}}, which also
% loads the present package.
% \end{abstract}
%
% \section{Documentation}
%
% Starting with \luatex 0.45.0, |require()| uses Kpathsea for file searching
% when the library is initalised (which is always the case in \tex mode, unless
% explicitly disabled by the user). However, it does not respect the Lua
% convention that |require("foo.bar")| should look for |foo/bar.lua|.
%
% This package implements such behaviour. More precisely, it looks for file
% |foo/bar| using Kpathsea with the format |lua| (that is, search along
% |LUAINPUTS| and try the following extensions:  |.luc|, |.luctex|, |.texluc|,
% |.lua|, |.luatex|, |.texlua|). If this search fails, it falls back to
% |foo.bar|.
%
% It also implements this behaviour with older versions of \luatex (or it soon
% will).
%
%    \section{Implementation}
%
%    \subsection{\tex package}
%
%    \begin{macrocode}
%<*texpackage>
%    \end{macrocode}
%
%    \subsubsection{Preliminaries}
%
%    Reload protection, especially for \plaintex.
%
%    \begin{macrocode}
                \csname lltxb@loader@loaded\endcsname
\expandafter\let\csname lltxb@loader@loaded\endcsname\endinput
%    \end{macrocode}
%
%    Catcode defenses.
%
%    \begin{macrocode}
\begingroup
  \catcode123 1 % {
  \catcode125 2 % }
  \catcode 35 6 % #
  \toks0{}%
  \def\x{}%
  \def\y#1 #2 {%
    \toks0\expandafter{\the\toks0 \catcode#1 \the\catcode#1}%
    \edef\x{\x \catcode#1 #2}}%
  \y 123 1  % {
  \y 125 2  % }
  \y  35 6  % #
  \y  10 12 % ^^J
  \y  34 12 % "
  \y  36 3  % $ $
  \y  39 12 % '
  \y  40 12 % (
  \y  41 12 % )
  \y  42 12 % *
  \y  43 12 % +
  \y  44 12 % ,
  \y  45 12 % -
  \y  46 12 % .
  \y  47 12 % /
  \y  60 12 % <
  \y  61 12 % =
  \y  64 11 % @ (letter)
  \y  62 12 % >
  \y  95 12 % _ (other)
  \y  96 12 % `
  \edef\y#1{\endgroup\edef#1{\the\toks0\relax}\x}%
\expandafter\y\csname lltxb@loader@AtEnd\endcsname
%    \end{macrocode}
%
%    Package declaration.
%
%    \begin{macrocode}
\begingroup
  \expandafter\ifx\csname ProvidesPackage\endcsname\relax
    \def\x#1[#2]{\immediate\write16{Package: #1 #2}}
  \else
    \let\x\ProvidesPackage
  \fi
\expandafter\endgroup
\x{luatexbase-loader}[2010/03/26 v0.1  Lua module loader for LuaTeX  (mpg)]
%    \end{macrocode}
%
%    Make sure \luatex is used.
%
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname RequirePackage\endcsname\relax
  \input ifluatex.sty
\else
  \RequirePackage{ifluatex}
\fi
\ifluatex\else
  \begingroup
    \expandafter\ifx\csname PackageWarningNoLine\endcsname\relax
      \def\x#1#2{\begingroup\newlinechar10
        \immediate\write16{Package #1 warning: #2}\endgroup}
    \else
      \let\x\PackageWarningNoLine
    \fi
  \expandafter\endgroup
  \x{luatexbase-loader}{LuaTeX is required for this package. Aborting.}
  \lltxb@loader@AtEnd
  \expandafter\endinput
\fi
%    \end{macrocode}
%
%    \subsubsection{Main content}
%
%    First load \pk{luatexbase-compat}.
%
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname RequirePackage\endcsname\relax
  \input luatexbase-compat.sty
\else
  \RequirePackage{luatexbase-compat}
\fi
%    \end{macrocode}
%
%    Load the supporting Lua module. This one doesn't follow the usual naming
%    conventions, since it won't be loaded with the usual functions for
%    obvious bootstraping reasons.
%
%    \begin{macrocode}
\luatexbase@directlua{%
  local file = "luatexbase.loader.lua"
  local path = assert(kpse.find_file(file, 'tex'),
    "File '"..file.."' no found")
  texio.write_nl("("..path..")")
  dofile(path)}
%    \end{macrocode}
%
%    That's all, folks!
%
%    \begin{macrocode}
\lltxb@loader@AtEnd
%</texpackage>
%    \end{macrocode}
%
%    \subsection{Lua module}
%
%    \begin{macrocode}
%<*luamodule>
module('luatexbase', package.seeall)
%    \end{macrocode}
%
%    Find the full path corresponding to a mudole name.
%
%    \begin{macrocode}
local function find_module_file(mod)
  return kpse.find_file(mod:gsub('%.', '/'), 'lua')
    or kpse.find_file(mod, 'lua')
end
%    \end{macrocode}
%
%    \begin{macrocode}
local function load_module(mod)
  local file = find_module_file(file)
  if not file then
    return "\n\t[luatexbase.loader] Search failed"
  end
  local loader, error = loadfile(file)
  if not loader then
    return "\n\t[luatexbase.loader] Loading error:\n\t"..error
  end
  texio.write_nl("("..file..")")
  return loader
end
%    \end{macrocode}
%
%    \begin{macrocode}
table.insert(package.loaders, load_module)
%</luamodule>
%    \end{macrocode}
%
%    \section{Test files}
%
%    We just check that the package loads properly, under both LaTeX and Plain
%    TeX. Anyway, the test files of other modules using this one already are a
%    test\dots
%
%    \begin{macrocode}
%<testplain>\input luatexbase-loader.sty
%<testlatex>\RequirePackage{luatexbase-loader}
%<*testplain,testlatex>
%    \end{macrocode}
%
%    \begin{macrocode}
%</testplain,testlatex>
%<testplain>\bye
%<testlatex>\stop
%    \end{macrocode}
%
% \Finale
\endinput
